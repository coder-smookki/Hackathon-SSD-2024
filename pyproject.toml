[tool.poetry]
name = "poetry"
version = "0.1.0"
description = ""
authors = ["prog.smookki <medved3loy@yandex.ru>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.115.5"
aiogram = "^3.15.0"
sqlalchemy = "^2.0.36"
alembic = "^1.14.0"
loguru = "^0.7.2"
python-dotenv = "^1.0.1"
apscheduler = "^3.10.4"
uvicorn = "^0.32.1"
ruff = "^0.8.0"
mypy = "^1.13.0"
asyncpg = "^0.30.0"
httpx = "^0.27.2"
cachetools = "^5.5.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 88
lint.select = [
  "F", # Pyflakes
  "E", # pycodestyle
  "W", # pycodestyle
  "UP", # pyupgrade
  "ANN", # flake8-annotations
  "ASYNC1", # flake8-trio
  "BLE", # flake8-blind-except
  "B", # flake8-bugbear
  "COM", # flake8-commas
  "C4", # flake8-comprehensions
  "PLC", # Pylint
  "ISC", # flake8-implicit-str-concat
  "INP", # flake8-no-pep420
  "PIE", # flake8-pie
  "Q", # flake8-quotes
  "RSE", # flake8-raise
  "RET", # flake8-return
  "SLF", # flake8-self
  "SIM", # flake8-simplify
  "FLY", # flynt
  "PERF", # Perflint
  "RUF", # Ruff-specific rules
  "T10", # flake8-debugger
  "T20", # flake8-print
]
lint.ignore = [
  "ANN101", # missing-type-self | Missing type annotation for {name} in method
  "ANN102", # missing-type-cls | Missing type annotation for {name} in classmethod
  "ANN401", # any-type | Dynamically typed expressions (typing.Any) are disallowed in {name}
  "UP038", # Use `X | Y` in `isinstance` call instead of `(X, Y)`
  "B905", # `zip()` without an explicit `strict=` parameter
  "RUF001", # ambiguous-unicode-character-string | String contains ambiguous {}. Did you mean {}?
  "RUF002", # ambiguous-unicode-character-docstring | Docstring contains ambiguous {}. Did you mean {}?
  "RUF003", # ambiguous-unicode-character-comment | Comment contains ambiguous {}. Did you mean {}?
  "UP042", # Class StrEnum inherits from both `str` and `enum.Enum`
  "SIM102", # Use a single `if` statement instead of nested `if` statements
]
exclude = [
  ".git",
  "build",
  "dist",
  "venv",
  ".venv",
  "*.egg-info",
  "*resources",
]
src = ["bot", "database", "di", "parser", "utils"]
target-version = "py310"
indent-width = 4

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.black]
line-length = 88
target-version = ["py310"]
exclude = '''
(
    \.eggs
  | \.git
  | build
  | dist
  | venv
  | resources
)
'''

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
plugins = "pydantic.mypy"
python_version = "3.10"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
explicit_package_bases = true
follow_imports = "normal"
follow_imports_for_stubs = true
ignore_missing_imports = false
implicit_optional = false
namespace_packages = true
no_silence_site_packages = false
no_site_packages = false
pretty = true
show_absolute_path = true
show_error_codes = true
show_error_context = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true