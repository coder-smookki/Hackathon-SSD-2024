from aiogram import F, Router
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery

from bot.callbacks.create_vcc import ChooseBackendVcc
from bot.callbacks.universal import YesNo
from bot.handlers.create_vcc.state import CreateVccState, VinteoSettingsState
from bot.keyboards.create_vcc import stop_add_users
from bot.keyboards.universal import yes_no_keyboard

vinteo_vcc_router = Router(name=__name__)


@vinteo_vcc_router.callback_query(
    CreateVccState.backend, ChooseBackendVcc.filter(F.name == "vinteo")
)
async def start_get_external_settings(
    callback: CallbackQuery,
    state: FSMContext,
):
    """—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ backend, –∑–∞–ø—Ä–æ—Å need_video_recording"""
    await state.update_data(backend="vinteo")
    await state.set_state(VinteoSettingsState.need_video_recording)
    await callback.message.edit_text(
        text="üìç –í–∫–ª—é—á–∞—Ç—å –ª–∏ –≤–∏–¥–µ–æ –∑–∞–ø–∏—Å—å?", reply_markup=yes_no_keyboard
    )


@vinteo_vcc_router.callback_query(
    VinteoSettingsState.need_video_recording, YesNo.filter()
)
async def start_get_external_settings(
    callback: CallbackQuery,
    callback_data: YesNo,
    state: FSMContext,
):
    """—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ need_video_recording, –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –¥–∞–Ω–Ω—ã—Ö"""
    await state.update_data(
        settings={"needVideoRecording": callback_data.result == "–î–∞"}
    )
    await state.set_state(CreateVccState.participants)
    await state.update_data(participants=[])
    await callback.message.edit_text(
        "‚úâÔ∏è –í–≤–µ–¥–∏—Ç–µ email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –í–ö–°",
        reply_markup=stop_add_users,
    )
